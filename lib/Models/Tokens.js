/**
 * IntroductionDeversiFiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Tokens
 */
class Tokens extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.dAI = this.constructor.getValue(obj.dAI || obj.DAI);
        this.eTH = this.constructor.getValue(obj.eTH || obj.ETH);
        this.mKR = this.constructor.getValue(obj.mKR || obj.MKR);
        this.sPK = this.constructor.getValue(obj.sPK || obj.SPK);
        this.uSD = this.constructor.getValue(obj.uSD || obj.USD);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'dAI', realName: 'DAI', type: 'DAI1' },
            { name: 'eTH', realName: 'ETH', type: 'ETH1' },
            { name: 'mKR', realName: 'MKR', type: 'MKR1' },
            { name: 'sPK', realName: 'SPK', type: 'SPK1' },
            { name: 'uSD', realName: 'USD', type: 'USD1' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Tokens;
