/**
 * IntroductionDeversiFiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of GetOpenOrder
 */
class GetOpenOrder extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id || obj._id);
        this.amount = this.constructor.getValue(obj.amount);
        this.cid = this.constructor.getValue(obj.cid);
        this.gid = this.constructor.getValue(obj.gid);
        this.hidden = this.constructor.getValue(obj.hidden);
        this.meta = this.constructor.getValue(obj.meta);
        this.mtsCreate = this.constructor.getValue(obj.mtsCreate);
        this.mtsTIF = this.constructor.getValue(obj.mtsTIF);
        this.mtsUpdate = this.constructor.getValue(obj.mtsUpdate);
        this.price = this.constructor.getValue(obj.price);
        this.priceAvg = this.constructor.getValue(obj.priceAvg);
        this.routing = this.constructor.getValue(obj.routing);
        this.status = this.constructor.getValue(obj.status);
        this.symbol = this.constructor.getValue(obj.symbol);
        this.type = this.constructor.getValue(obj.type);
        this.createdAt = this.constructor.getValue(obj.createdAt || obj.created_at);
        this.updatedAt = this.constructor.getValue(obj.updatedAt || obj.updated_at);
        this.amountOrig = this.constructor.getValue(obj.amountOrig || obj.amount_orig);
        this.pair = this.constructor.getValue(obj.pair);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: '_id' },
            { name: 'amount', realName: 'amount' },
            { name: 'cid', realName: 'cid' },
            { name: 'gid', realName: 'gid' },
            { name: 'hidden', realName: 'hidden' },
            { name: 'meta', realName: 'meta', type: 'Meta' },
            { name: 'mtsCreate', realName: 'mtsCreate' },
            { name: 'mtsTIF', realName: 'mtsTIF' },
            { name: 'mtsUpdate', realName: 'mtsUpdate' },
            { name: 'price', realName: 'price' },
            { name: 'priceAvg', realName: 'priceAvg' },
            { name: 'routing', realName: 'routing' },
            { name: 'status', realName: 'status' },
            { name: 'symbol', realName: 'symbol' },
            { name: 'type', realName: 'type' },
            { name: 'createdAt', realName: 'created_at' },
            { name: 'updatedAt', realName: 'updated_at' },
            { name: 'amountOrig', realName: 'amount_orig' },
            { name: 'pair', realName: 'pair' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = GetOpenOrder;
