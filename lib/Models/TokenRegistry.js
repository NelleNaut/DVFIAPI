/**
 * IntroductionDeversiFiLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of TokenRegistry
 */
class TokenRegistry extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.eTH = this.constructor.getValue(obj.eTH || obj.ETH);
        this.uSD = this.constructor.getValue(obj.uSD || obj.USD);
        this.wBT = this.constructor.getValue(obj.wBT || obj.WBT);
        this.mKR = this.constructor.getValue(obj.mKR || obj.MKR);
        this.dAI = this.constructor.getValue(obj.dAI || obj.DAI);
        this.uDC = this.constructor.getValue(obj.uDC || obj.UDC);
        this.bAT = this.constructor.getValue(obj.bAT || obj.BAT);
        this.nEC = this.constructor.getValue(obj.nEC || obj.NEC);
        this.oMG = this.constructor.getValue(obj.oMG || obj.OMG);
        this.zRX = this.constructor.getValue(obj.zRX || obj.ZRX);
        this.sNT = this.constructor.getValue(obj.sNT || obj.SNT);
        this.sAN = this.constructor.getValue(obj.sAN || obj.SAN);
        this.eDO = this.constructor.getValue(obj.eDO || obj.EDO);
        this.fUN = this.constructor.getValue(obj.fUN || obj.FUN);
        this.rEP = this.constructor.getValue(obj.rEP || obj.REP);
        this.sPK = this.constructor.getValue(obj.sPK || obj.SPK);
        this.eNJ = this.constructor.getValue(obj.eNJ || obj.ENJ);
        this.tKN = this.constructor.getValue(obj.tKN || obj.TKN);
        this.tSD = this.constructor.getValue(obj.tSD || obj.TSD);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'eTH', realName: 'ETH', type: 'ETH' },
            { name: 'uSD', realName: 'USD', type: 'USD' },
            { name: 'wBT', realName: 'WBT', type: 'WBT' },
            { name: 'mKR', realName: 'MKR', type: 'MKR' },
            { name: 'dAI', realName: 'DAI', type: 'DAI' },
            { name: 'uDC', realName: 'UDC', type: 'UDC' },
            { name: 'bAT', realName: 'BAT', type: 'BAT' },
            { name: 'nEC', realName: 'NEC', type: 'NEC' },
            { name: 'oMG', realName: 'OMG', type: 'OMG' },
            { name: 'zRX', realName: 'ZRX', type: 'ZRX' },
            { name: 'sNT', realName: 'SNT', type: 'SNT' },
            { name: 'sAN', realName: 'SAN', type: 'SAN' },
            { name: 'eDO', realName: 'EDO', type: 'EDO' },
            { name: 'fUN', realName: 'FUN', type: 'FUN' },
            { name: 'rEP', realName: 'REP', type: 'REP' },
            { name: 'sPK', realName: 'SPK', type: 'SPK' },
            { name: 'eNJ', realName: 'ENJ', type: 'ENJ' },
            { name: 'tKN', realName: 'TKN', type: 'TKN' },
            { name: 'tSD', realName: 'TSD', type: 'TSD' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = TokenRegistry;
